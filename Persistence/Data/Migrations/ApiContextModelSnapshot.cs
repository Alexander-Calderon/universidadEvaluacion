// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Domain.Entities.AlumnoSeMatriculaAsignatura", b =>
                {
                    b.Property<int>("IdAlumno")
                        .HasColumnType("int")
                        .HasColumnName("id_alumno");

                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int")
                        .HasColumnName("id_asignatura");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.HasKey("IdAlumno", "IdAsignatura", "IdCurso")
                        .HasName("PRIMARY");

                    b.HasIndex("IdAsignatura");

                    b.HasIndex("IdCurso");

                    b.ToTable("alumno_se_matricula_asignatura", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id_asignatura");

                    b.Property<float?>("Creditos")
                        .HasColumnType("float")
                        .HasColumnName("creditos");

                    b.Property<int?>("Curso")
                        .HasColumnType("int")
                        .HasColumnName("curso");

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int")
                        .HasColumnName("id_departamento");

                    b.Property<int?>("IdGrado")
                        .HasColumnType("int")
                        .HasColumnName("id_grado");

                    b.Property<int?>("IdProfesor")
                        .HasColumnType("int")
                        .HasColumnName("id_profesor");

                    b.Property<string>("NombreAsignatura")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_asignatura");

                    b.Property<string>("TipoAsignatura")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo_asignatura");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDepartamento" }, "id_departamento");

                    b.HasIndex(new[] { "IdGrado" }, "id_grado");

                    b.HasIndex(new[] { "IdProfesor" }, "id_profesor");

                    b.ToTable("asignatura", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.CursoEscolar", b =>
                {
                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int>("AnioFin")
                        .HasColumnType("int")
                        .HasColumnName("anio_fin");

                    b.Property<int>("AnioInicio")
                        .HasColumnType("int")
                        .HasColumnName("anio_inicio");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("IdCurso")
                        .HasName("PRIMARY");

                    b.ToTable("curso_escolar", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id_departamento");

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_departamento");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("departamento", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Grado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id_grado");

                    b.Property<string>("NombreGrado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_grado");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("grado", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id_persona");

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido1");

                    b.Property<string>("Apellido2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido2");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ciudad");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dni");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("genero")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tipo_persona");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Profesor", b =>
                {
                    b.Property<int>("IdProfesor")
                        .HasColumnType("int")
                        .HasColumnName("id_profesor");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int")
                        .HasColumnName("id_departamento");

                    b.HasKey("IdProfesor")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDepartamento" }, "id_departamento")
                        .HasDatabaseName("id_departamento1");

                    b.ToTable("profesor", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.AlumnoSeMatriculaAsignatura", b =>
                {
                    b.HasOne("Domain.Entities.Persona", "IdAlumnoNavigation")
                        .WithMany("AlumnoSeMatriculaAsignaturas")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("alumnosematriculaasignaturas_ibfk_1");

                    b.HasOne("Domain.Entities.Asignatura", "IdAsignaturaNavigation")
                        .WithMany("AlumnoSeMatriculaAsignaturas")
                        .HasForeignKey("IdAsignatura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("alumnosematriculaasignaturas_ibfk_2");

                    b.HasOne("Domain.Entities.CursoEscolar", "IdCursoNavigation")
                        .WithMany("AlumnoSeMatriculaAsignaturas")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("alumnosematriculaasignaturas_ibfk_3");

                    b.Navigation("IdAlumnoNavigation");

                    b.Navigation("IdAsignaturaNavigation");

                    b.Navigation("IdCursoNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Asignatura", b =>
                {
                    b.HasOne("Domain.Entities.Departamento", "IdDepartamentoNavigation")
                        .WithMany("Asignaturas")
                        .HasForeignKey("IdDepartamento")
                        .HasConstraintName("asignatura_ibfk_2");

                    b.HasOne("Domain.Entities.Grado", "IdGradoNavigation")
                        .WithMany("Asignaturas")
                        .HasForeignKey("IdGrado")
                        .HasConstraintName("asignatura_ibfk_1");

                    b.HasOne("Domain.Entities.Profesor", "IdProfesorNavigation")
                        .WithMany("Asignaturas")
                        .HasForeignKey("IdProfesor")
                        .HasConstraintName("asignatura_ibfk_3");

                    b.Navigation("IdDepartamentoNavigation");

                    b.Navigation("IdGradoNavigation");

                    b.Navigation("IdProfesorNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Profesor", b =>
                {
                    b.HasOne("Domain.Entities.Departamento", "IdDepartamentoNavigation")
                        .WithMany("Profesors")
                        .HasForeignKey("IdDepartamento")
                        .HasConstraintName("profesor_ibfk_2");

                    b.HasOne("Domain.Entities.Persona", "IdProfesorNavigation")
                        .WithOne("Profesor")
                        .HasForeignKey("Domain.Entities.Profesor", "IdProfesor")
                        .IsRequired()
                        .HasConstraintName("profesor_ibfk_1");

                    b.Navigation("IdDepartamentoNavigation");

                    b.Navigation("IdProfesorNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Asignatura", b =>
                {
                    b.Navigation("AlumnoSeMatriculaAsignaturas");
                });

            modelBuilder.Entity("Domain.Entities.CursoEscolar", b =>
                {
                    b.Navigation("AlumnoSeMatriculaAsignaturas");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Asignaturas");

                    b.Navigation("Profesors");
                });

            modelBuilder.Entity("Domain.Entities.Grado", b =>
                {
                    b.Navigation("Asignaturas");
                });

            modelBuilder.Entity("Domain.Entities.Persona", b =>
                {
                    b.Navigation("AlumnoSeMatriculaAsignaturas");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Domain.Entities.Profesor", b =>
                {
                    b.Navigation("Asignaturas");
                });
#pragma warning restore 612, 618
        }
    }
}
